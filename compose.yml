services:
  db:
    image: postgres:15
    restart: always
    env_file: .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB} -h 127.0.0.1 -p 5432"]
      interval: 5s
      timeout: 3s
      retries: 30

  redis:
    image: redis:7
    restart: always
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 20

  migrations:
    build: .
    depends_on:
      db:
        condition: service_healthy
    env_file: .env
    restart: "no"
    entrypoint: ["alembic"]
    command: ["upgrade", "head"]

  web:
    build: .
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
    env_file: .env
    volumes:
      - .:/app
      - exports_data:/data/out   
      - imports_data:/data/in    
    ports:
      - "8000:8000"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "python -c \"import sys,urllib.request; sys.exit(0 if urllib.request.urlopen('http://127.0.0.1:8000/openapi.json', timeout=2).getcode()==200 else 1)\""
        ]
      interval: 10s
      timeout: 3s
      retries: 10

volumes:
  postgres_data:
  exports_data:
  imports_data:
